{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErros","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;IAAaA,W,WAAAA,W;;;;;;;qCACIC,G,EAAK;AACd,gBAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,mBAAOH,GAAP;AACH;;;4BAEGI,G,EAAK;AAAA;;AACL,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAO,MAAKC,YAAL,CAAkBP,GAAlB,CAAP;AAAA,aADH,EAEFM,IAFE,CAEG;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFH,CAAP;AAGH;;;6BAEIJ,G,EAAKK,I,EAAM;AAAA;;AACZ,mBAAOJ,MAAMD,GAAN,EAAW;AACdM,yBAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,wBAAQ,MAFM;AAGdC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,aAAX,EAKFH,IALE,CAKG;AAAA,uBAAO,OAAKC,YAAL,CAAkBP,GAAlB,CAAP;AAAA,aALH,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService {\n    _handleErros(res) {\n        if (!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url) {\n        return fetch(url)\n            .then(res => this._handleErros(res))\n            .then(res => res.json());\n    }\n\n    post(url, dado) {\n        return fetch(url, {\n            headers: { 'Content-type': 'application/json' },\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n            .then(res => this._handleErros(res));\n    }\n}"]}